{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///../../../src/components/VCard/VCard.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["module","exports","Object","is","x","y","name","props","root","Boolean","computed","isDark","this","render","$slots","default","node","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","undefined","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index","flat","hover","img","link","loaderHeight","type","Number","outlined","raised","shaped","classes","styles","style","methods","genProgress","$createElement","staticClass","data","h","tag","setBackgroundColor","returnValue","isActive","originalValue","watch","save","setTimeout","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","transition","VTreeviewNode","inject","treeview","level","item","hasLoaded","isIndeterminate","isLoading","isOpen","isSelected","disabled","key","children","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","on","click","e","genCheckbox","genLevel","genNode","setTextColor","genChild","scopedSlots","genChildrenWrapper","map","genTransition","isExcluded","attrs","search","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","selectionType","validator","v","includes","activeCache","nodes","openCache","selectedCache","Set","excludedItems","handler","oldKeys","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","mounted","console","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","c","calculateState","add","counts","state","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","changed","descendant","updateOpen","updateVnodeState","has","length","themeClasses"],"mappings":"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","file":"js/assistent~hideout~quests.61d37bc1.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-samevalue\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    outlined: Boolean,\n    raised: Boolean,\n    shaped: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--outlined': this.outlined,\n        'v-card--raised': this.raised,\n        'v-card--shaped': this.shaped,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\nimport { TreeviewItemFunction } from 'types'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => ([]),\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String as PropType<'leaf' | 'independent'>,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    },\n    value: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n    this.active.forEach(key => this.updateActive(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}