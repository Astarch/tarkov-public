{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["module","exports","Object","is","x","y","name","props","root","Boolean","computed","isDark","this","render","$slots","default","node","returnValue","data","isActive","originalValue","watch","methods","save","setTimeout","baseMixins","mixins","directives","ClickOutside","dark","disabled","fullscreen","light","maxWidth","type","String","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","stackMinZIndex","classes","contentClasses","hasActivator","$scopedSlots","created","$attrs","hasOwnProperty","beforeMount","beforeDestroy","window","unbind","animateClick","closeConditional","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","hideScroll","document","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","el","focusable","querySelectorAll","focus","genContent","showLazyContent","class","attrs","role","tabindex","on","keydown","style","zIndex","ref","genTransition","$createElement","appear","genInnerContent","value","args","include","undefined","h","staticClass","attach","collection","collectionStrong","init","arguments","length","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","call","RegExp","res","done","rx","S","previousLastIndex","lastIndex","result","index","VCardActions","VCardSubtitle","VCardText","VCardTitle","flat","hover","img","link","loaderHeight","Number","outlined","raised","shaped","styles","genProgress","tag","setBackgroundColor","VTreeviewNodeProps","activatable","activeClass","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","VTreeviewNode","inject","treeview","level","item","hasLoaded","isIndeterminate","isLoading","isOpen","isSelected","key","children","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","checkChildren","Promise","resolve","genLabel","label","slot","genPrependSlot","prepend","genAppendSlot","append","genToggle","VIcon","click","genCheckbox","genLevel","genNode","setTextColor","genChild","scopedSlots","genChildrenWrapper","map","isExcluded","search","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","selectionType","validator","v","includes","activeCache","nodes","openCache","selectedCache","Set","excludedItems","handler","oldKeys","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","mounted","console","updateAll","keys","buildTree","parent","oldNode","vnode","c","calculateState","add","counts","state","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","changed","descendant","updateOpen","updateVnodeState","has","themeClasses"],"mappings":"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","file":"js/hideout~quests.7c3a58b1.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-samevalue\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        focusable.length && (focusable[0] as HTMLElement).focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: this.onClickOutside,\n            args: {\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {},\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    outlined: Boolean,\n    raised: Boolean,\n    shaped: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--outlined': this.outlined,\n        'v-card--raised': this.raised,\n        'v-card--shaped': this.shaped,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\nimport { TreeviewItemFunction } from 'types'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => ([]),\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String as PropType<'leaf' | 'independent'>,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    },\n    value: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n    this.active.forEach(key => this.updateActive(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}